import { neon } from '@neondatabase/serverless';

const sql = neon(process.env.DATABASE_URL);

const ADDITIONAL_SETTINGS = [
  { key: 'max_accounts_premium', category: 'features', description: 'N√∫mero m√°ximo de contas para plano premium (-1 = ilimitado)', value: -1 },
  { key: 'max_transactions_premium', category: 'features', description: 'N√∫mero m√°ximo de transa√ß√µes para plano premium (-1 = ilimitado)', value: -1 },
  { key: 'max_accounts_enterprise', category: 'features', description: 'N√∫mero m√°ximo de contas para plano enterprise (-1 = ilimitado)', value: -1 },
  { key: 'max_transactions_enterprise', category: 'features', description: 'N√∫mero m√°ximo de transa√ß√µes para plano enterprise (-1 = ilimitado)', value: -1 },
  { key: 'default_locale', category: 'features', description: 'Localiza√ß√£o padr√£o do sistema', value: 'pt-AO' },
  { key: 'currency_symbol', category: 'features', description: 'S√≠mbolo da moeda padr√£o', value: 'Kz' },
  { key: 'support_phone', category: 'system', description: 'Telefone de suporte t√©cnico', value: '+244 900 000 000' },
  { key: 'company_name', category: 'system', description: 'Nome da empresa', value: 'Sistema de Controle Financeiro' },
  { key: 'landing_hero_title', category: 'content', description: 'T√≠tulo principal da landing page', value: 'Controle Financeiro Inteligente' },
  { key: 'landing_hero_subtitle', category: 'content', description: 'Subt√≠tulo da landing page', value: 'Gerencie suas finan√ßas pessoais com facilidade e seguran√ßa' },
  { key: 'landing_cta_text', category: 'content', description: 'Texto do bot√£o de call-to-action', value: 'Comece seu teste gratuito' }
];

async function addMissingSettings() {
  console.log('üîß Adicionando configura√ß√µes de sistema em falta...');

  for (const setting of ADDITIONAL_SETTINGS) {
    try {
      const existing = await sql`SELECT id FROM system_settings WHERE key = ${setting.key}`;
      if (existing.length === 0) {
        await sql`
          INSERT INTO system_settings (key, category, description, value, created_at, updated_at)
          VALUES (${setting.key}, ${setting.category}, ${setting.description}, ${JSON.stringify(setting.value)}, NOW(), NOW())
        `;
        console.log(`‚úÖ Configura√ß√£o criada: ${setting.key}`);
      } else {
        console.log(`‚ö†Ô∏è  Configura√ß√£o j√° existe: ${setting.key}`);
      }
    } catch (error) {
      console.error(`‚ùå Erro ao criar configura√ß√£o ${setting.key}:`, error);
    }
  }

  console.log('‚úÖ Configura√ß√µes adicionais conclu√≠das!');
}

addMissingSettings()
  .then(() => process.exit(0))
  .catch(error => {
    console.error('‚ùå Erro:', error);
    process.exit(1);
  });