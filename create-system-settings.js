// Sistema de Configura√ß√µes - Dados Essenciais
import { neon } from '@neondatabase/serverless';

const sql = neon(process.env.DATABASE_URL);

const SYSTEM_SETTINGS = [
  {
    key: "trial_duration_days",
    category: "trial",
    description: "Dura√ß√£o do per√≠odo de teste gratuito em dias",
    value: 14
  },
  {
    key: "max_accounts_basic",
    category: "features",
    description: "N√∫mero m√°ximo de contas para plano b√°sico",
    value: 5
  },
  {
    key: "max_transactions_basic",
    category: "features",
    description: "N√∫mero m√°ximo de transa√ß√µes por m√™s no plano b√°sico",
    value: 1000
  },
  {
    key: "email_notifications_enabled",
    category: "notifications",
    description: "Habilitar notifica√ß√µes por email",
    value: true
  },
  {
    key: "stripe_webhook_endpoint",
    category: "payments",
    description: "URL do webhook do Stripe",
    value: "/api/webhooks/stripe"
  },
  {
    key: "session_timeout_minutes",
    category: "security",
    description: "Timeout da sess√£o em minutos",
    value: 60
  },
  {
    key: "maintenance_mode",
    category: "system",
    description: "Modo de manuten√ß√£o do sistema",
    value: false
  },
  {
    key: "backup_enabled",
    category: "system",
    description: "Habilitar backup autom√°tico",
    value: true
  },
  {
    key: "max_login_attempts",
    category: "security",
    description: "N√∫mero m√°ximo de tentativas de login",
    value: 5
  },
  {
    key: "password_min_length",
    category: "security",
    description: "Comprimento m√≠nimo da senha",
    value: 8
  },
  {
    key: "default_currency",
    category: "features",
    description: "Moeda padr√£o do sistema",
    value: "AOA"
  },
  {
    key: "support_email",
    category: "system",
    description: "Email de suporte t√©cnico",
    value: "suporte@financecontrol.com"
  }
];

async function createSystemSettings() {
  console.log('üîß Criando configura√ß√µes do sistema...');
  
  for (const setting of SYSTEM_SETTINGS) {
    try {
      // Verificar se j√° existe
      const existing = await sql`
        SELECT id FROM system_settings 
        WHERE key = ${setting.key}
      `;
      
      if (existing.length === 0) {
        await sql`
          INSERT INTO system_settings (key, category, description, value, created_at, updated_at)
          VALUES (${setting.key}, ${setting.category}, ${setting.description}, ${JSON.stringify(setting.value)}, NOW(), NOW())
        `;
        console.log(`‚úÖ Configura√ß√£o criada: ${setting.key}`);
      } else {
        console.log(`‚ö†Ô∏è  Configura√ß√£o j√° existe: ${setting.key}`);
      }
    } catch (error) {
      console.error(`‚ùå Erro ao criar configura√ß√£o ${setting.key}:`, error);
    }
  }
  
  console.log('‚úÖ Configura√ß√µes do sistema criadas com sucesso!');
}

// Executar se for chamado diretamente
if (import.meta.url === `file://${process.argv[1]}`) {
  createSystemSettings()
    .then(() => process.exit(0))
    .catch(error => {
      console.error('‚ùå Erro:', error);
      process.exit(1);
    });
}

export { createSystemSettings };